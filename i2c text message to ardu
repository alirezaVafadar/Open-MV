import sensor, image, time
import pyb, ustruct

# Note: The I2C hardware bus on OpenMV Cam is bus 2.
bus = pyb.I2C(2, pyb.I2C.SLAVE, addr=0x12)
bus.deinit()  # Completely shut down the device
bus = pyb.I2C(2, pyb.I2C.SLAVE, addr=0x12)
print("Waiting for Arduino...")


sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QQVGA)
sensor.skip_frames(time = 2000)
sensor.set_auto_gain(False)
sensor.set_auto_whitebal(False)


text = "start";
data = ustruct.pack("<%ds" % len(text), text)

while True:
    img = sensor.snapshot()
    tags = img.find_apriltags(families=image.TAG36H11)
    if len(tags) > 0:
        tag_id = tags[0].id()
        print("AprilTag detected with ID:", tag_id)
        if tag_id==1:
            text = "april tag one";
            data = ustruct.pack("<%ds" % len(text), text)

        try:
            bus.send(ustruct.pack("<h", len(data)), timeout=10000)  # Send the length (16-bits) first
            try:
                bus.send(data, timeout=10000)  # Then send the data
                print("Sent Data!")  # Displayed when no errors occur
            except OSError as err:
                pass  # Skip if an error occurs
                # Note that there are 3 possible errors: timeout error, general purpose error, or busy error.
                # The error codes for "err.arg[0]" are 116, 5, and 16 respectively.
        except OSError as err:
            pass  # Skip if an error occurs
            # Note that there are 3 possible errors: timeout error, general purpose error, or busy error.
            # The error codes for "err.arg[0]" are 116, 5, and 16 respectively.
